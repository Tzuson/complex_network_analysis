nrow=3, ncol=3))
l_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
print(l)
source("initialization.R")
source("functions/measures.R")
source("functions/tests.R")
adj_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
l_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
print(l_matrix)
source("initialization.R")
source("functions/measures.R")
source("functions/tests.R")
adj_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
l_matrix <- t(matrix(c(0,1,0,
1,0,1,
1,1,0),
nrow=3, ncol=3))
print(l_matrix)
source("initialization.R")
source("functions/measures.R")
source("functions/tests.R")
adj_matrix <- t(matrix(c(0,1,0,
1,0,1,
0,1,0),
nrow=3, ncol=3))
l_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
print(l_matrix)
testgraph <- graph_from_adjacency_matrix(adj_matrix*l_matrix, mode="directed", weighted=TRUE)
plot(testgraph)
source("initialization.R")
source("functions/measures.R")
source("functions/tests.R")
adj_matrix <- t(matrix(c(0,1,0,
1,0,1,
0,1,0),
nrow=3, ncol=3))
l_matrix <- t(matrix(c(0,1,2,
1,0,1,
2,1,0),
nrow=3, ncol=3))
print(l_matrix)
testgraph <- graph_from_adjacency_matrix(adj_matrix*l_matrix, mode="directed", weighted=TRUE)
plot(testgraph)
global_efficiency(testgraph, l_matrix)
source("initialization.R")
source("functions/measures.R")
source("functions/tests.R")
adj_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
l_matrix <- t(matrix(c(0,1,2,
1,0,1,
2,1,0),
nrow=3, ncol=3))
print(l_matrix)
testgraph <- graph_from_adjacency_matrix(adj_matrix*l_matrix, mode="directed", weighted=TRUE)
plot(testgraph)
global_efficiency(testgraph, l_matrix)
source("initialization.R")
source("functions/measures.R")
source("functions/tests.R")
adj_matrix <- t(matrix(c(0,1,0,
1,0,1,
0,1,0),
nrow=3, ncol=3))
l_matrix <- t(matrix(c(0,1,2,
1,0,1,
2,1,0),
nrow=3, ncol=3))
print(l_matrix)
testgraph <- graph_from_adjacency_matrix(adj_matrix*l_matrix, mode="directed", weighted=TRUE)
plot(testgraph)
global_efficiency(testgraph, l_matrix)
source("initialization.R")
source("functions/measures.R")
source("functions/tests.R")
adj_matrix <- t(matrix(c(0,1,0,
1,0,1,
0,1,0),
nrow=3, ncol=3))
l_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
print(l_matrix)
testgraph <- graph_from_adjacency_matrix(adj_matrix*l_matrix, mode="directed", weighted=TRUE)
plot(testgraph)
global_efficiency(testgraph, l_matrix)
source("initialization.R")
source("functions/measures.R")
source("functions/tests.R")
adj_matrix <- t(matrix(c(0,0,0,
0,0,1,
0,1,0),
nrow=3, ncol=3))
l_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
print(l_matrix)
testgraph <- graph_from_adjacency_matrix(adj_matrix*l_matrix, mode="directed", weighted=TRUE)
plot(testgraph)
global_efficiency(testgraph, l_matrix)
source("initialization.R")
source("functions/functions.R")
# Assumption: g a simple graph
#' Efficiency of a graph, according to Latora (2001)
#'
#' @param g A graph
#' @param l A matrix
#' @return The global efficiency (number)
global_efficiency <- function(g,l){
n <- vcount(g)
if (n<2){
return(0)
}# if
d <- distances(g, v=V(g), to=V(g), mode="out")
for (i in seq(n)){
d[i,i] <- Inf
l[i,i] <- Inf
}# for
return(sum(1/d)/(sum(1/l)))
}# global_efficiency(g,l)
#' Local efficiency of the nodes of a graph
#'
#' @param g A graph
#' @param l A matrix
#' @return The local efficiencies of nodes (vector)
local_efficiency <- function(g,l){
sapply(V(g),function(node){
subg <- induced_subgraph(g,c(neighbors(g,node)))
subl <- l[V(subg),V(subg)]
global_efficiency(subg, subl)
})
}# local_efficiency(g,l)
#' Topological information content
#'
#' @param g A graph
#' @return The topological information content (number)
#' @details
#' The topological information content is defined as
#' the logarithm of the size of the automorphism group to the base of 2.
information_content <- function(g){
log2(as.numeric(igraph::automorphisms(g)$group_size))
}# information_content(g)
#' Global efficacy of a graph
#'
#' @param g A graph
#' @param l A matrix
#' @return The global efficacy (number)
#' @details:
#' The global efficacy of a graph is the sum over inverse shortest path lengths,
#' multiplied with the number of shortest paths, divided by n(n-1).
#' (van der Loo, 2018)
global_efficacy <- function(g,l){
n <- vcount(g)
if (n<2){
return(0)
}# if
d <- distances(g, v=V(g), to=V(g), mode="out")
mu <- matrix(0, nrow=n, ncol=n)
for (i in seq(n)){
d[i,i] <- Inf
l[i,i] <- Inf
mu[i,] <- all_shortest_paths(g, from=i, to=V(g), mode="out")$nrgeo
}# for
return(sum(mu/d)/(sum(1/l)))
}# global_efficacy(g,l)
#' The local efficacy
#'
#' @param g A graph
#' @param l A matrix
#' @return The local efficiencies of nodes (vector)
local_efficacy <- function(g,l){
sapply(V(g),function(node){
subg <- induced_subgraph(g,c(neighbors(g,node)))
subl <- l[V(subg),V(subg)]
return(global_efficacy(subg,subl))
})
}# local_efficacy(g,l)
#' Return a vector of graph characterization
#'
#' @param g A graph
#' @param l A matrix
#' @param performance A function
#' @return Graph characterization numbers
#' @details
#' The characterizations are: global and local efficiency, global and local efficacy,
#' vulnerability of nodes and edges, and topological information content
measures <- function(g, l, performance){
c(
global_efficiency = global_efficiency(g,l)
, local_efficiency = mean(local_efficiency(g,l))
, global_efficacy = global_efficacy(g,l)
, local_efficacy  = mean(local_efficacy(g,l))
, vulnerability_nodes = max(vulnerability_nodes(g, l, performance))
, vulnerability_edges = max(vulnerability_edges(g, l, performance))
, topological_information_content = information_content(g)
)
}# measures(g, l, performance)
source("initialization.R")
source("functions/measures.R")
source("functions/tests.R")
adj_matrix <- t(matrix(c(0,0,0,
0,0,1,
0,1,0),
nrow=3, ncol=3))
l_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
print(l_matrix)
testgraph <- graph_from_adjacency_matrix(adj_matrix*l_matrix, mode="directed", weighted=TRUE)
plot(testgraph)
global_efficiency(testgraph, l_matrix)
print(measures(testgraph,l,global_efficiency))
source("initialization.R")
source("functions/measures.R")
source("functions/tests.R")
adj_matrix <- t(matrix(c(0,0,0,
0,0,1,
0,1,0),
nrow=3, ncol=3))
l_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
print(l_matrix)
testgraph <- graph_from_adjacency_matrix(adj_matrix*l_matrix, mode="directed", weighted=TRUE)
plot(testgraph)
global_efficiency(testgraph, l_matrix)
print(measures(testgraph,l_matrix,global_efficiency))
source("initialization.R")
source("functions/measures.R")
source("functions/tests.R")
adj_matrix <- t(matrix(c(0,1,0,
1,0,1,
0,1,0),
nrow=3, ncol=3))
l_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
print(l_matrix)
testgraph <- graph_from_adjacency_matrix(adj_matrix*l_matrix, mode="directed", weighted=TRUE)
plot(testgraph)
global_efficiency(testgraph, l_matrix)
print(measures(testgraph,l_matrix,global_efficiency))
source("initialization.R")
source("functions/measures.R")
source("functions/tests.R")
adj_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
l_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
print(l_matrix)
testgraph <- graph_from_adjacency_matrix(adj_matrix*l_matrix, mode="directed", weighted=TRUE)
plot(testgraph)
global_efficiency(testgraph, l_matrix)
print(measures(testgraph,l_matrix,global_efficiency))
constant <- sqrt(2)
print(constant)
source("initialization.R")
source("functions/measures.R")
source("functions/tests.R")
c <- sqrt(2)
adj_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
l_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
print(l_matrix)
adj_matrix2 <- t(matrix(c(0,1,1,0,1,
1,0,0,1,0,
1,0,0,1,0,
0,1,1,0,1,
1,0,0,1,0,),
nrow-5,ncol=5))
l_matrix2 <- t(matrix(c(0,1,1,c,1,
1,0,c,1,c/2,
1,c,0,1,c/2,
c,1,1,0,c/2,
c/2,c/2,c/2,c/2,0,),
nrow-5,ncol=5))
testgraph <- graph_from_adjacency_matrix(adj_matrix*l_matrix, mode="directed", weighted=TRUE)
plot(testgraph)
print(measures(testgraph,l_matrix,global_efficiency))
source("initialization.R")
source("functions/measures.R")
source("functions/tests.R")
c <- sqrt(2)
adj_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
l_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
print(l_matrix)
adj_matrix2 <- t(matrix(c(0,1,1,0,1,
1,0,0,1,0,
1,0,0,1,0,
0,1,1,0,1,
1,0,0,1,0,),
nrow=5,ncol=5))
l_matrix2 <- t(matrix(c(0,1,1,c,1,
1,0,c,1,c/2,
1,c,0,1,c/2,
c,1,1,0,c/2,
c/2,c/2,c/2,c/2,0,),
nrow=5,ncol=5))
testgraph <- graph_from_adjacency_matrix(adj_matrix*l_matrix, mode="directed", weighted=TRUE)
plot(testgraph)
print(measures(testgraph,l_matrix,global_efficiency))
source("initialization.R")
source("functions/measures.R")
source("functions/tests.R")
c <- sqrt(2)
adj_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
l_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
print(l_matrix)
adj_matrix2 <- t(matrix(c(0,1,1,0,1,
1,0,0,1,0,
1,0,0,1,0,
0,1,1,0,1,
1,0,0,1,0,),
nrow=5,ncol=5))
l_matrix2 <- t(matrix(c(0,1,1,c,1,
1,0,c,1,c/2,
1,c,0,1,c/2,
c,1,1,0,c/2,
c/2,c/2,c/2,c/2,0,),
nrow=5,ncol=5))
testgraph <- graph_from_adjacency_matrix(adj_matrix2*l_matrix2, mode="directed", weighted=TRUE)
plot(testgraph)
print(measures(testgraph,l_matrix2,global_efficiency))
source("initialization.R")
source("functions/measures.R")
source("functions/tests.R")
c <- sqrt(2)
adj_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
l_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
print(l_matrix)
adj_matrix2 <- t(matrix(c(0,1,1,0,1,
1,0,0,1,0,
1,0,0,1,0,
0,1,1,0,1,
1,0,0,1,0,),
nrow=5,ncol=5))
l_matrix2 <- t(matrix(c(0,1,1,c,1,
1,0,c,1,c/2,
1,c,0,1,c/2,
c,1,1,0,c/2,
c/2,c/2,c/2,c/2,0,),
nrow=5,ncol=5))
testgraph <- graph_from_adjacency_matrix(adj_matrix2*l_matrix2, mode="directed", weighted=TRUE)
plot(testgraph)
print(measures(testgraph,l_matrix2,global_efficiency))
adj_matrix <- t(matrix(c(0,1,1,0,1,
1,0,0,1,0,
1,0,0,1,0,
0,1,1,0,1,
1,0,0,1,0,),
nrow=5,ncol=5))
l_matrix <- t(matrix(c(0,1,1,c,1,
1,0,c,1,c/2,
1,c,0,1,c/2,
c,1,1,0,c/2,
c/2,c/2,c/2,c/2,0,),
nrow=5,ncol=5))
testgraph <- graph_from_adjacency_matrix(adj_matrix*l_matrix, mode="directed", weighted=TRUE)
plot(testgraph)
print(measures(testgraph,l_matrix,global_efficiency))
source("initialization.R")
source("functions/measures.R")
source("functions/tests.R")
c <- sqrt(2)
adj_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
l_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
print(l_matrix)
adj_matrix <- t(matrix(c(0,1,1,0,1,
1,0,0,1,0,
1,0,0,1,0,
0,1,1,0,1,
1,0,0,1,0,),
nrow=5,ncol=5))
l_matrix <- t(matrix(c(0,1,1,c,1,
1,0,c,1,c/2,
1,c,0,1,c/2,
c,1,1,0,c/2,
c/2,c/2,c/2,c/2,0,),
nrow=5,ncol=5))
testgraph <- graph_from_adjacency_matrix(adj_matrix*l_matrix, mode="directed", weighted=TRUE)
plot(testgraph)
print(measures(testgraph,l_matrix,global_efficiency))
source("initialization.R")
source("functions/measures.R")
source("functions/tests.R")
c <- sqrt(2)
adj_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
l_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
print(l_matrix)
adj_matrix <- t(matrix(c(0,1,1,0,1,
1,0,0,1,0,
1,0,0,1,0,
0,1,1,0,1,
1,0,0,1,0),
nrow=5,ncol=5))
l_matrix <- t(matrix(c(0,1,1,c,1,
1,0,c,1,c/2,
1,c,0,1,c/2,
c,1,1,0,c/2,
c/2,c/2,c/2,c/2,0),
nrow=5,ncol=5))
testgraph <- graph_from_adjacency_matrix(adj_matrix*l_matrix, mode="directed", weighted=TRUE)
plot(testgraph)
print(measures(testgraph,l_matrix,global_efficiency))
warnings()
source("initialization.R")
source("functions/measures.R")
source("functions/tests.R")
c <- sqrt(2)
adj_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
l_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
print(l_matrix)
adj_matrix <- t(matrix(c(0,1,1,0,1,
1,0,0,1,0,
1,0,0,1,0,
0,1,1,0,1,
1,0,0,1,0),
nrow=5,ncol=5))
l_matrix <- t(matrix(c(0,1,1,c,1,
1,0,c,1,c/2,
1,c,0,1,c/2,
c,1,1,0,c/2,
c/2,c/2,c/2,c/2,0),
nrow=5,ncol=5))
l_matrix <- 0*l_matrix+1
testgraph <- graph_from_adjacency_matrix(adj_matrix*l_matrix, mode="directed", weighted=TRUE)
plot(testgraph)
print(measures(testgraph,l_matrix,global_efficiency))
print(1329367/13)
source("initialization.R")
source("functions/measures.R")
source("functions/tests.R")
c <- sqrt(2)
adj_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
l_matrix <- t(matrix(c(0,1,1,
1,0,1,
1,1,0),
nrow=3, ncol=3))
print(l_matrix)
testgraph <- graph_from_adjacency_matrix(adj_matrix*l_matrix, mode="directed", weighted=TRUE)
plot(testgraph)
print(measures(testgraph,l_matrix,global_efficiency))
